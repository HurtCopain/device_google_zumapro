<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2016, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- If face auth sends the user directly to home/last open app, or stays on keyguard by default-->
    <bool name="config_faceAuthDismissesKeyguard">false</bool>

    <!-- Our amoled doesn't animate well. -->
    <bool name="config_animateScreenLights">false</bool>

    <bool name="config_ui_enableFadingMarquee">false</bool>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!--  Whether Multiuser UI should be shown -->
    <bool name="config_enableMultiUserUI">true</bool>

    <!--  Maximum number of supported users -->
    <integer name="config_multiuserMaximumUsers">4</integer>

    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">true</bool>

    <!-- Enable 802.11ac for Wifi hotspot (SAP) -->
    <bool translatable="false" name="config_wifi_softap_ieee80211ac_supported">true</bool>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
        <item>"softap.*"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>"usb\\d"</item>
        <item>"rndis\\d"</item>
    </string-array>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <bool name="config_safe_sound_dosage_enabled">true</bool>

    <string translatable="false" name="config_radio_access_family">GSM|CDMA|EVDO|WCDMA|LTE</string>

    <!-- Enable doze mode
         ComponentName of a dream to show whenever the system would otherwise have gone to sleep. -->
    <string translatable="false" name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- Type of the ambient tap sensor. Empty if ambient tap is not supported. -->
    <string name="config_dozeTapSensorType" translatable="false">com.google.sensor.single_touch</string>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- If device supports pickup/lift gesture -->
    <bool name="config_dozePulsePickup">true</bool>

    <!-- Screen brightness when dozing. -->
    <integer name="config_screenBrightnessDoze">34</integer>

    <!-- Whether the always on display mode is available. -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Disable AOD by default -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Specifies whether to decouple the auto-suspend state of the device from the display on/off state. -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

    <!-- Specifies whether to decouple the interactive state of the device from the display on/off state. -->
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>

    <!-- Radius of the software rounded corners at the top of the display in its natural
        orientation. If zero, the value of rounded_corner_radius is used. -->
    <dimen name="rounded_corner_radius_top">52px</dimen>

    <!-- Radius of the software rounded corners at the bottom of the display in its natural
        orientation. If zero, the value of rounded_corner_radius is used. -->
    <dimen name="rounded_corner_radius_bottom">52px</dimen>

    <!-- Top adjustment for the software rounded corners since corners are not perfectly
        round.  This value is used when retrieving the "radius" of the top rounded corner in cases
        where the exact bezier curve cannot be retrieved.  This value will be subtracted from
        rounded_corner_radius_top to more accurately provide a "radius" for the top rounded corners.
         -->
    <dimen name="rounded_corner_radius_top_adjustment">5px</dimen>

    <!-- Bottom adjustment for the software rounded corners since corners are not perfectly
        round.  This value is used when retrieving the "radius" of the bottom rounded corner in
        cases where the exact bezier curve cannot be retrieved.  This value will be subtracted from
        rounded_corner_radius_bottom to more accurately provide a "radius" for the bottom rounded
        corners. -->
    <dimen name="rounded_corner_radius_bottom_adjustment">4px</dimen>

    <!-- Height of the status bar -->
    <dimen name="status_bar_height_portrait">28dp</dimen>

    <!-- Height of area above QQS where battery/time go (equal to status bar height if > 48dp) -->
    <dimen name="quick_qs_offset_height">171px</dimen>
    <!-- Total height of QQS (quick_qs_offset_height + 128dp) -->
    <dimen name="quick_qs_total_height">177dp</dimen>

    <!-- Shutdown if the battery temperature exceeds (this value * 0.1) Celsius. -->
    <integer name="config_shutdownBatteryTemperature">600</integer>

    <!-- Whether or not we should show the option to show battery percentage -->
    <bool name="config_battery_percentage_setting_available">true</bool>

    <!-- Number of physical SIM slots on the device. This includes both eSIM
    and pSIM slots, and is not necessarily the same as the number of phones/logical modems
    supported by the device.  For example, a multi-sim device can have 2 phones/logical modems,
    but 3 physical slots, or a single SIM device can have 1 phones/logical modems, but 2
    physical slots (one eSIM and one pSIM) -->
    <integer name="config_num_physical_slots">2</integer>

    <!-- Enable CBRS support -->
    <bool translatable="false" name="config_cbrs_supported">true</bool>

    <!-- IWLAN-->
    <string name="config_wlan_data_service_package">com.google.android.iwlan</string>
    <string name="config_wlan_network_service_package">com.google.android.iwlan</string>
    <bool name="config_wlan_data_service_conn_persistence_on_restart">false</bool>

    <!-- Boolean indicating USSD over IMS is allowed.
     If it is not supported due to modem limitations, USSD send over the CS pipe instead.-->
    <bool name="config_allow_ussd_over_ims">true</bool>

    <!-- Flag specifying whether VoLTE is available on device -->
    <bool name="config_device_volte_available">true</bool>

    <!-- Flag specifying whether VoLTE is available on device -->
    <bool name="config_device_vt_available">true</bool>

    <!-- Flag specifying whether WFC over IMS is availasble on device -->
    <bool name="config_device_wfc_ims_available">true</bool>

    <!-- An integer representing a timeout value in milliseconds that will be used to delay a
         radio power off command until IMS deregistration completes. If 0, this feature is disabled
         and there will be no delay. -->
    <integer name="config_delay_for_ims_dereg_millis">3000</integer>

    <!-- Whether the new Auto Selection Network UI should be shown -->
    <bool name="config_enableNewAutoSelectNetworkUI">true</bool>

    <!-- Is the device capable of hot swapping an UICC Card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- The default refresh rate. P21 manages this using the peak refresh rate setting, so set
         this value to 0 so it has no effect. -->
    <integer name="config_defaultRefreshRate">0</integer>

    <!-- The default peak refresh rate. -->
    <integer name="config_defaultPeakRefreshRate">60</integer>

    <!-- Optional IPsec algorithms enabled by this device, defaulting to empty. OEMs can override
         it by providing a list of algorithm names in an overlay config.xml file.

         As Android releases new versions, more algorithms are becoming mandatory. Mandatory
         algorithms will be automatically enabled on the device. Optional algorithms need
         to be explicitly declared in this resource to be enabled.
             * SDK level 28 makes the following algorithms mandatory : "cbc(aes)", "hmac(md5)",
               "hmac(sha1)", "hmac(sha256)", "hmac(sha384)", "hmac(sha512)", "rfc4106(gcm(aes))"
             * SDK level 31 makes the following algorithms mandatory : "rfc3686(ctr(aes))",
               "xcbc(aes)", "rfc7539esp(chacha20,poly1305)"
     -->
    <string-array name="config_optionalIpSecAlgorithms" translatable="false">
        <!-- Add algorithm here -->
        <item>"xcbc(aes)"</item>
        <item>"rfc3686(ctr(aes))"</item>
    </string-array>

    <!-- List supported color modes. -->
    <integer-array name="config_availableColorModes">
        <item>0</item> <!-- COLOR_MODE_NATURAL -->
        <item>2</item> <!-- COLOR_MODE_SATURATED -->
        <item>3</item> <!-- COLOR_MODE_AUTOMATIC -->
    </integer-array>

    <integer-array name="config_mappedColorModes">
        <item>0</item> <!-- COLOR_MODE_NATURAL -->
        <item>3</item> <!-- COLOR_MODE_BOOSTED -->
        <item>3</item> <!-- COLOR_MODE_SATURATED -->
        <item>3</item> <!-- COLOR_MODE_AUTOMATIC -->
    </integer-array>

    <!-- Color mode to use when accessibility transforms are enabled. This color mode must be
     supported by the device, but not necessarily appear in config_availableColorModes. The
     regularly selected color mode will be used if this value is negative. -->
    <integer name="config_accessibilityColorMode">2</integer>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently
         in hardware. -->
    <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- Default color temperature, in Kelvin, to tint the screen when night display is
         activated. -->
    <integer name="config_nightDisplayColorTemperatureDefault">4000</integer>

    <!-- Whether the device enable the standalone (SA) mode of 5G NR.-->
    <bool name="config_telephony5gStandalone">true</bool>
    <!-- Whether the device enable the non-standalone (NSA) mode of 5G NR.-->
    <bool name="config_telephony5gNonStandalone">true</bool>

    <!-- An array of device capabilities defined by GSMA SGP.22 v2.2.2, and their corresponding major
     version. -->
     <string-array translatable="false" name="config_telephonyEuiccDeviceCapabilities">
          <item>"gsm,9"</item>
          <item>"utran,9"</item>
          <item>"eutran,16"</item>
          <item>"nrepc,16"</item>
          <item>"nr5gc,16"</item>
          <item>"eutran5gc,16"</item>
     </string-array>

    <!-- Auto-brightness sensor type string -->
    <string name="config_displayLightSensorType">"com.google.sensor.auto_brightness"</string>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/apex/com.android.art/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.art/javalib/core-libart.jar"</item>
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/system/bin/surfaceflinger"</item>
        <item>"/system_ext/priv-app/SystemUIGoogle/SystemUIGoogle.apk"</item>
    </string-array>

    <!-- Bytes that the PinnerService will pin for Home app -->
    <integer name="config_pinnerHomePinBytes">6291456</integer>

    <!-- The default intensity level for alarm vibrations. See
         Settings.System.ALARM_VIBRATION_INTENSITY more details on the constant values and
         meanings. -->
    <integer name="config_defaultAlarmVibrationIntensity">3</integer>
    <!-- The default intensity level for haptic feedback. See
         Settings.System.HAPTIC_FEEDBACK_INTENSITY more details on the constant values and
         meanings. -->
    <integer name="config_defaultHapticFeedbackIntensity">3</integer>
    <!-- The default intensity level for media vibrations. See
         Settings.System.MEDIA_VIBRATION_INTENSITY more details on the constant values and
         meanings. -->
    <integer name="config_defaultMediaVibrationIntensity">3</integer>
    <!-- The default intensity level for notification vibrations. See
         Settings.System.NOTIFICATION_VIBRATION_INTENSITY more details on the constant values and
         meanings. -->
    <integer name="config_defaultNotificationVibrationIntensity">3</integer>
    <!-- The default intensity level for notification vibrations. See
         Settings.System.RING_VIBRATION_INTENSITY more details on the constant values and
         meanings. -->
    <integer name="config_defaultRingVibrationIntensity">3</integer>

    <!-- Enables or disables haptic effect when the text insertion/selection handle is moved
          manually by the user. Off by default, since the expected haptic feedback may not be
          available on some devices. -->
    <bool name="config_enableHapticTextHandle">true</bool>

    <!-- Enable Zram writeback feature to allow unused pages in zram be written to flash. -->
    <bool name="config_zramWriteback">true</bool>

    <!-- Enable variable refresh rate when typing. -->
    <bool name="config_variableRefreshRateTypingSupported">false</bool>

    <!-- The list of packages to automatically opt in of fresh rate suppressing by small area
         detection. Format of this array should be packageName:threshold and threshold value should
         be between 0 to 1-->
    <string-array name="config_smallAreaDetectionAllowlist" translatable="false">
        <!-- Add packages:threshold here -->
        <item>com.tencent.mm:0.07</item>
        <item>com.facebook.katana:0.07</item>
        <item>com.instagram.android:0.07</item>
        <item>com.spotify.music:0.05</item>
        <item>com.reddit.frontpage:0.07</item>
        <item>com.zhiliaoapp.musically:0.07</item>
        <item>com.bilibili.app.in:0.07</item>
        <item>com.twitter.android:0.07</item>
        <item>com.google.android.youtube:0.07</item>
     </string-array>

    <!-- Class names of device-specific services inheriting com.android.server.SystemService. The
         classes are instantiated in the order of the array. -->
    <!-- TODO: b/350624523 - Add back modem ML TFLite service after it is ready. -->
    <!-- <string-array translatable="false" name="config_deviceSpecificSystemServices">
        <item>com.android.server.modemml.TFLiteService</item>
    </string-array> -->

    <!-- Pre-scale volume at volume step 1 for Absolute Volume -->
    <fraction name="config_prescaleAbsoluteVolume_index1">100%</fraction>

    <!-- Pre-scale volume at volume step 2 for Absolute Volume -->
    <fraction name="config_prescaleAbsoluteVolume_index2">100%</fraction>

    <!-- Pre-scale volume at volume step 3 for Absolute Volume -->
    <fraction name="config_prescaleAbsoluteVolume_index3">100%</fraction>

    <!-- Telephony satellite service package name to bind to by default. -->
    <string name="config_satellite_service_package">com.google.android.satellite</string>

    <!-- The time duration in millis after which Telephony will stop waiting for the response of the
         satellite enable request from modem, and send failure response to the client that has
         requested Telephony to enable satellite.
         -->
    <integer name="config_wait_for_satellite_enabling_response_timeout_millis">240000</integer>

    <!-- Telephony pointing UI package name to be launched. -->
    <string name="config_pointing_ui_package">com.google.android.apps.scone</string>

    <!-- Telephony pointing UI class name to be launched. -->
    <string name="config_pointing_ui_class">com.google.android.apps.scone.satellite.pointingui.ui.PointingUiActivity</string>

    <!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true -->
    <bool translatable="false" name="skip_restoring_network_selection">true</bool>

     <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
       The N entries of this array define N  1 zones as follows:
          Zone 0:        0 <= LUX < array[0]
          Zone 1:        array[0] <= LUX < array[1]
          ...
          Zone N:        array[N - 1] <= LUX < array[N]
          Zone N + 1     array[N] <= LUX < infinity
          Must be overridden in platform specific overlays -->
     <integer-array name="config_autoBrightnessLevels">
          <item>1</item>
          <item>2</item>
          <item>3</item>
          <item>4</item>
          <item>8</item>
          <item>12</item>
          <item>15</item>
          <item>20</item>
          <item>33</item>
          <item>55</item>
          <item>90</item>
          <item>148</item>
          <item>245</item>
          <item>403</item>
          <item>665</item>
          <item>1097</item>
          <item>1808</item>
          <item>3000</item>
          <item>6000</item>
          <item>9000</item>
          <item>10000</item>
          <item>14000</item>
          <item>20000</item>
          <item>25000</item>
          <item>31000</item>
          <item>41000</item>
          <item>51000</item>
          <item>61000</item>
          <item>71000</item>
          <item>81000</item>
          <item>91000</item>
          <item>100000</item>
     </integer-array>

     <!-- Array of desired screen brightness in nits corresponding to the lux values
       in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
       config_screenBrightnessMaximumNits, the display brightness is defined as the measured
       brightness of an all-white image.

       If this is defined then:
       - config_autoBrightnessLcdBacklightValues should not be defined
       - config_screenBrightnessNits must be defined
       - config_screenBrightnessBacklight must be defined

       This array should have size one greater than the size of the config_autoBrightnessLevels
       array. The brightness values must be non-negative and non-decreasing. This must be
       overridden in platform specific overlays -->
     <array name="config_autoBrightnessDisplayValuesNits">
          <item>5.139055</item>      <!--  0 - 1 -->
          <item>9.962018965</item>   <!--  1 - 2 -->
          <item>18.34822964</item>   <!--  2 - 3 -->
          <item>21.55068128</item>   <!--  3 - 4 -->
          <item>24.0167788</item>    <!--  4 - 8 -->
          <item>32.5</item>          <!--  8 - 12 -->
          <item>46</item>            <!--  12 - 15 -->
          <item>53.26923077</item>   <!--  15 - 20 -->
          <item>54.61538462</item>   <!--  20 - 33 -->
          <item>58.11538462</item>   <!--  33 - 55 -->
          <item>62.1394</item>       <!--  55 - 90 -->
          <item>67.13133333</item>   <!--  90 - 148 -->
          <item>79.67614115</item>   <!--  148 - 245 -->
          <item>98.04727274</item>   <!--  245 - 403 -->
          <item>125.1221991</item>   <!--  403 - 665 -->
          <item>161.6875093</item>   <!--  665 - 1097 -->
          <item>208.4885553</item>   <!--  1097 - 1808 -->
          <item>264.8221315</item>   <!--  1808 - 3000 -->
          <item>328.5869521</item>   <!--  3000 - 6000 -->
          <item>627.4315413</item>   <!--  6000 - 9000 -->
          <item>826.8584866</item>   <!--  9000 - 10000 -->
          <item>867.85582302</item>  <!-- 10000 - 14000 -->
          <item>1041.39662279</item> <!-- 14000 - 20000 -->
          <item>1227.52633489</item> <!-- 20000 - 25000 -->
          <item>1331.28933608</item> <!-- 25000 - 31000 -->
          <item>1428.421149</item>   <!-- 31000 - 41000 -->
          <item>1575.787970</item>   <!-- 41000 - 51000 -->
          <item>1703.973078</item>   <!-- 51000 - 61000 -->
          <item>1811.651453</item>   <!-- 61000 - 71000 -->
          <item>1897.082235</item>   <!-- 71000 - 81000 -->
          <item>1958.157391</item>   <!-- 81000 - 91000 -->
          <item>1992.433376</item>   <!-- 91000 - 100000 -->
          <item>2050</item>          <!-- 100000+  -->
     </array>

    <!-- Array of screen brightness threshold values. This is used for determining hysteresis
         constraint values by calculating the index to use for lookup and then setting the
         constraint value to the corresponding value of the array. The new brightening hysteresis
         constraint value is the n-th element of config_screenBrighteningThresholds, and the new
         darkening hysteresis constraint value is the n-th element of
         config_screenDarkeningThresholds.

         Historically, it has been assumed that this will be an integer array with values in the
         range of [0, 255]. However, it is now assumed to be a float array with values in the
         range of [0, 1]. To accommodate both the possibilities, we internally check the scale on
         which the thresholds are defined, and calibrate it accordingly.

         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                       calculated index
         value < level[0]                0
         level[n] <= value < level[n+1]  n+1
         level[MAX] <= value             MAX+1 -->
    <array name="config_screenThresholdLevels">
        <item>0.5</item>
        <item>0.6</item>
        <item>0.9</item>
    </array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_screenThresholdLevels. The brightening threshold is calculated as
         screenBrightness * (1.0f + CONSTRAINT_VALUE). When the new screen brightness is higher
         than this threshold, it is applied. See the config_screenThresholdLevels description for
         how the constraint value is chosen. -->
    <integer-array name="config_screenBrighteningThresholds">
        <item>100</item>
        <item>100</item>
        <item>40</item>
        <item>10</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_screenThresholdLevels. The darkening threshold is calculated as
         screenBrightness * (1.0f - CONSTRAINT_VALUE). When the new screen brightness is lower than
         this threshold, it is applied. See the config_screenThresholdLevels description for how
         the constraint value is chosen. -->
    <integer-array name="config_screenDarkeningThresholds">
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
    </integer-array>

    <!-- The identifier of the satellite's SIM profile. The identifier is composed of MCC and MNC
         of the satellite PLMN with the format "mccmnc". -->
    <string name="config_satellite_sim_plmn_identifier">90198</string>

    <!-- The identifier for the satellite's SIM profile. The identifier is the service provider name
         (spn) from the profile metadata. -->
    <string name="config_satellite_sim_spn_identifier">Skylo</string>

    <!-- Telephony satellite gateway service package name to bind to by default. -->
    <string name="config_satellite_gateway_service_package">com.google.android.apps.stargate</string>

    <!-- List of country codes where oem-enabled satellite services are either allowed or disallowed
         by the device. Each country code is a lowercase 2 character ISO-3166-1 alpha-2. -->
    <string-array name="config_oem_enabled_satellite_country_codes">
          <item>US</item>
    </string-array>

    <!-- The file storing S2-cell-based satellite access restriction of the countries defined by
         config_oem_enabled_satellite_countries. -->
    <string name="config_oem_enabled_satellite_s2cell_file">/vendor/etc/telephony/sats2.dat</string>

    <!-- The time duration in millis after which cellular scanning will be enabled and satellite
         will move to IDLE state. This timeout duration is used for satellite with NB IOT radio
         technologies.
         -->
    <integer name="config_satellite_nb_iot_inactivity_timeout_millis">2147483647</integer>

    <!-- The time duration in millis after which cellular scanning will be enabled and satellite
         will move to IDLE state. This timeout duration is used for satellite with NB IOT radio
         technologies in demo mode.
         -->
    <integer name="config_satellite_demo_mode_nb_iot_inactivity_timeout_millis">2147483647</integer>

    <!-- The time duration in millis after which Telephony will abort the datagram sending requests.
         Telephony starts a timer when receiving a datagram sending request in either OFF, IDLE, or
         NOT_CONNECTED state. In NOT_CONNECTED, the duration of the timer is given by this config.
         In OFF or IDLE state, the duration of the timer is the sum of this config and the
         config_satellite_modem_image_switching_duration_millis.
         -->
    <integer name="config_datagram_wait_for_connected_state_timeout_millis">180000</integer>

    <!-- The package name of the app to handle oem-enabled satellite SOS messaging. -->
    <string name="config_oem_enabled_satellite_sos_handover_app">com.google.android.apps.stargate;com.google.android.apps.stargate.questionnaire.QuestionnaireHomeActivity</string>

    <!-- The intent action to handle oem-enabled satellite SOS messaging. -->
    <string name="config_satellite_emergency_handover_intent_action">com.google.android.apps.stargate.ACTION_ESOS_QUESTIONNAIRE</string>

    <!-- Whether device supports increased touch sensitvity -->
    <bool name="config_supportGloveMode">true</bool>
</resources>
